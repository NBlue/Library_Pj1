<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <title>Quản lí thư viện</title>
        <link rel="icon" href="/img/other/logo.png"  type="image/x-icon" >

        <!-- font -->
        <link rel="preconnect" href="https://fonts.googleapis.com" />
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
        <link
            href="https://fonts.googleapis.com/css2?family=Roboto:wght@100;300;400;500;700;900&display=swap"
            rel="stylesheet"
        />

        <!-- icon -->
        <link rel="stylesheet" href="/font/fontawesome-free-5.15.3/css/all.min.css">

        <!-- reset CSS -->
        <link
            rel="stylesheet"
            href="https://cdnjs.cloudflare.com/ajax/libs/normalize/8.0.1/normalize.min.css"
            integrity="sha512-NhSC1YmyruXifcj/KFRWoC561YpHpc5Jtzgvbuzx5VozKpWvQ+4nXhPdFgmx8xqexRcpAglTj9sIBWINXa8x5w=="
            crossorigin="anonymous"
            referrerpolicy="no-referrer"
        />

        <link
            rel="stylesheet"
            type="text/css"
            href="https://cdn.jsdelivr.net/npm/slick-carousel@1.8.1/slick/slick.css"
          />

        <link 
            rel="stylesheet" 
            href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css" 
            integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">
        <link rel="stylesheet" href="/css/base.css">
        <link rel="stylesheet" href="/css/navbar.css">
        <link rel="stylesheet" href="/css/footer.css">
        <link rel="stylesheet" href="/css/admin.css">
        <link rel="stylesheet" href="/css/user.css">
        <link rel="stylesheet" href="/css/modal.css">
        <link rel="stylesheet" href="/css/grid.css">
    </head>
    <body>
        <div class="app">
            {{> header }}

            <div id="container" class="container">
                <div class="grid">
                    {{{body}}}
                </div>
                <script type="text/javascript">
                    const navAdmin = document.querySelector(".navbar-admin");
                    const navClient = document.querySelector(".navbar-client");
                    const containerUser = document.querySelector(".container-users");
                    const containerAdmin = document.querySelector(".container-admin");
                    const BackAcc = document.querySelector(".navbar-user .user__back");
                    const adminBook = document.querySelector(".admin-books");
                    const adminAuthor = document.querySelector(".admin-authors");
                    const adminUser = document.querySelector(".admin-users");
                    const adminHome = document.querySelector(".admin-home");
                    const userHome = document.querySelector(".home");
                    const userBook = document.querySelector(".container-users > .book");
                    const userAuthor = document.querySelector(".authors");
                    const userLogin = document.querySelector("#user-login");
                    const notLogin = document.querySelector(".not-login");
                    const adminLogin = document.querySelector(".user-manager");


                    // Active tab
                    if(containerUser != null){
                        navClient.classList.add("active");
                        const clientItem = document.querySelectorAll(".navbar-client .nav-item");
                        if(userHome != null) clientItem[0].classList.add("active");
                        else if(userBook != null) clientItem[1].classList.add("active");
                        else if(userAuthor != null) clientItem[2].classList.add("active");
                        
                        if(userLogin != null){
                            var dataId = userLogin.getAttribute("data-id");
                            if(dataId !== ""){
                                userLogin.classList.add("active");
                                notLogin.classList.remove("active");
                            }else{
                                userLogin.classList.remove("active");
                                notLogin.classList.add("active");
                            }
                        }
                    }
                    if(containerAdmin != null){
                        let searchBox = document.querySelector(".search-wrap");
                        console.log(searchBox);
                        searchBox.style.display = "none";

                        navAdmin.classList.add("active");
                        adminLogin.classList.add("active");
                        notLogin.classList.remove("active");
                        const adminItem = document.querySelectorAll(".navbar-admin .nav-item");
                        if(adminHome != null) adminItem[0].classList.add("active");
                        else if(adminBook != null) adminItem[1].classList.add("active");
                        else if(adminAuthor != null) adminItem[2].classList.add("active");
                        else if(adminUser != null) adminItem[3].classList.add("active");
                    }
                </script>
            </div>

            {{> footer }}

            {{!-- Modal AccPass --}}
            <div class="modal-pass">
                <div class="container">
                    <form action="" method="POST">
                        <header class="modal-header">
                            <h1 class="acc-title">Đổi mật khẩu</h1>
                            <button type="button" class="btn-close" onclick="onClose()">
                                <img src="/img/other/remove_icon.png" alt="">                        
                            </button>
                        </header>
                        <div class="form-group">
                            <label for="password_older" class="form-label">Nhập mật khẩu cũ</label>
                            <input
                                id="password_older"
                                name="password_older"
                                type="password"
                                data-pass="{{dataUser.Password}}"
                                placeholder="Nhập mật khẩu cũ"
                                class="form-control"
                            />
                            <span class="form-message"></span>
                        </div>
                        <div class="form-group">
                            <label for="password_new" class="form-label">Nhập mật khẩu mới</label>
                            <input
                                id="password_new"
                                name="password_new"
                                type="password"
                                placeholder="Nhập mật khẩu mới"
                                class="form-control"
                            />
                            <span class="form-message"></span>
                        </div>
                        <div class="form-group">
                            <label for="password_confirmation" class="form-label">Xác
                                nhận mật khẩu</label>
                            <input
                                id="password_confirmation"
                                name="password_confirmation"
                                type="password"
                                placeholder="Nhập lại mật khẩu"
                                class="form-control"
                            />
                            <span class="form-message"></span>
                        </div>
                        <button id="submit-pass" class="form-submit" type="button">Xác nhận</button>
                    </form>
                </div>
                <script>
                    const updatePassBtn = document.querySelector(".update__password-btn");
                    const modalPass = document.querySelector(".modal-pass");
                    const oldPass = document.querySelector("#password_older");
                    const newPass = document.querySelector("#password_new");
                    const confirmNewPass = document.querySelector("#password_confirmation");
                    const submitPassBtn = document.querySelector("#submit-pass");

                    if(updatePassBtn !== null){
                        updatePassBtn.onclick = function() {
                            modalPass.classList.add("active");
                        }
                    }
                    document.addEventListener("DOMContentLoaded", () => {
                        document.querySelector('.modal-pass').addEventListener("click", (e) => e.stopPropagation());
                        //document.querySelector('.container').addEventListener("click", onCancel);
                    })
                    function onClose() {
                        modalPass.classList.remove("active");
                    }



                    // Validator js
                    oldPass.onblur = () => {
                        if(oldPass.value === "") {
                            setErrMess("Mật khẩu được yêu cầu nhập!", oldPass);
                        } else if(oldPass.value !== oldPass.getAttribute("data-pass")) { 
                            setErrMess("Mật khẩu không đúng!", oldPass);

                        }
                    }
                    oldPass.oninput = () => setErrMess("", oldPass);

                    newPass.onblur = () =>{
                        if(newPass.value === ""){
                            setErrMess("Mật khẩu được yêu cầu nhập!", newPass);
                        } else if(newPass.value === oldPass.getAttribute("data-pass")){
                            setErrMess("Mật khẩu trùng mật khẩu cũ!", newPass);
                        } else if(newPass.value.length < 8){
                            setErrMess("Mật khẩu mới lớn hơn bằng 8 kí tự!", newPass);
                        }
                    }
                    newPass.oninput = () => setErrMess("", newPass)

                    confirmNewPass.onblur = () => {
                        if(newPass.value === ""){
                            setErrMess("Mật khẩu được yêu cầu nhập!", confirmNewPass);
                        } else if(confirmNewPass.value !== newPass.value) {
                            setErrMess("Mật khẩu nhập lại chưa đúng!", confirmNewPass);
                        }
                    }
                    confirmNewPass.oninput = () => setErrMess("", confirmNewPass);

                    //submitPassBtn.
                    setErrMess = function(errMess, element){
                        let parrentElement =  element.closest(".form-group");
                        let messElement = parrentElement.querySelector(".form-message")
                        if(errMess !== ""){
                            parrentElement.classList.add("invalid")
                        } else 
                            parrentElement.classList.remove("invalid");
                        messElement.innerHTML = errMess;
                    }

                    submitPassBtn.onclick = () => {
                        if(oldPass.value === "") {
                            setErrMess("Mật khẩu được yêu cầu nhập!", oldPass);
                        } else if(oldPass.value !== oldPass.getAttribute("data-pass")) { 
                            setErrMess("Mật khẩu không đúng!", oldPass);
                        }
                        if(newPass.value === ""){
                            setErrMess("Mật khẩu được yêu cầu nhập!", newPass);
                        } else if(newPass.value === oldPass.getAttribute("data-pass")){
                            setErrMess("Mật khẩu trùng mật khẩu cũ!", newPass);
                        } else if(newPass.value.length < 8){
                            setErrMess("Mật khẩu mới lớn hơn bằng 8 kí tự!", newPass);
                        }
                        if(newPass.value === ""){
                            setErrMess("Mật khẩu được yêu cầu nhập!", confirmNewPass);
                        } else if(confirmNewPass.value !== newPass.value) {
                            setErrMess("Mật khẩu nhập lại chưa đúng!", confirmNewPass);
                        }
                        let errMess = document.querySelectorAll(".modal-pass .form-message");
                        let count = 0;
                        for(let e of errMess) {
                            if(e.innerText !== ""){
                                break;
                            } else count++;
                        }
                        if(count === 3){
                            submitPassBtn.setAttribute("type", "submit");
                        }
                    }
                </script>
            </div>

            <div class="confirm modal-returnBook">
                <div class="modal">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <header class="modal-header">
                                <h5>Trả sách</h5>
                                <button type="button" class="btn-close" onclick="onBack()">
                                    <img src="/img/other/remove_icon.png" alt="">                        
                                </button>
                            </header>
                            <section class="modal-body">
                                <span class="remind">
                                    <i class="remind-icon fas fa-frown"></i>
                                    <h6 class="remind-text">Bạn đã mượn sách quá thời gian!!!</h6>
                                </span>
                                <p>Bạn chắc chắn muốn trả quyển sách này?</p>
                            </section>
                            <footer class="modal-footer">
                                <button type="button" class="btn btn-primary modal-btn modal-confirm-btn" style="background-color: var(--primary-color);" onclick="onConfirmBorrow()">Trả sách</button>
                                <button type="button" class="btn btn-secondary  modal-btn" onclick="onBack()">Hủy</button>
                            </footer>
                        </div>
                    </div>
                </div>
                <form name="returnBook" method="POST" style="margin: 0"></form>
                <script>
                    var confirmModal = document.querySelector(".modal-returnBook .modal")
                    var idBook, flat;

                    function onConfirm(e){
                        idBook = e.getAttribute("data-id")
                        confirmModal.classList.add("active");

                        var remind = document.querySelector(".remind");
                        if(e.closest(".book").querySelector(".book-note.danger") !== null){
                            remind.classList.add("active");
                            flat = "_qh";
                        } else {
                            remind.classList.remove("active");
                            flat = "";
                        }
                    }
                    function onBack() {
                        confirmModal.classList.remove("active");
                    }
                    function onConfirmBorrow(){
                        console.log("click");
                        var returnForm = document.forms['returnBook']
                        returnForm.action = "./myBookBorrow/" + idBook + flat;
                        returnForm.submit();
                    }
                </script>
            </div>

            {{!-- alert thông báo! --}}            
            <div class="confirm noti-login">
                <div class="modal">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <header class="modal-header">
                                <h5>{{alert.Title}}</h5>
                                <button type="button" class="btn-close" onclick="onCancel()">
                                    <img src="/img/other/remove_icon.png" alt="">                        
                                </button>
                            </header>
                            <section class="modal-body">
                                <p>{{alert.Content}}</p>
                            </section>
                            <footer class="modal-footer">
                                <button type="button" class="btn btn-primary modal-btn modal-confirm-btn" onclick="onCancel()">OK</button>
                            </footer>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js" integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q" crossorigin="anonymous"></script>
        <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous"></script>

        <script
        type="text/javascript"
        src="https://code.jquery.com/jquery-1.11.0.min.js"
        ></script>
        <script
            type="text/javascript"
            src="https://code.jquery.com/jquery-migrate-1.2.1.min.js"
        ></script>
        <script
            type="text/javascript"
            src="https://cdn.jsdelivr.net/npm/slick-carousel@1.8.1/slick/slick.min.js"
        ></script>

        <script src="/js/pagination.min.js"></script>
        <script src="/js/pagination_set.js"></script>

        <script type="text/javascript">
            $(document).ready(function () {
                $(".slider").slick({
                    infinite: true,
                    slidesToShow: 1,
                    autoplay: true,
                    autoplaySpeed: 2000,
                    prevArrow:
                        "<button type='button' class='slick-prev pull-left slick-arrow'><i class='fa fa-angle-left' aria-hidden='true'></i></button>",
                    nextArrow:
                        "<button type='button' class='slick-next pull-right slick-arrow'><i class='fa fa-angle-right' aria-hidden='true'></i></button>",
                    dots: true,
                });
            });

            // Top book slide
            $(document).ready(function () {
                $(".topbook__slide").slick({
                    infinite: true,
                    slidesToShow: 4,
                    slidesToScroll: 1,
                    autoplay: true,
                    prevArrow:
                        "<button type='button' class='slick-prev pull-left topbook__slick-arrow'><i class='fas fa-long-arrow-alt-left' aria-hidden='true'></i></button>",
                    nextArrow:
                        "<button type='button' class='slick-next pull-right topbook__slick-arrow'><i class='fas fa-long-arrow-alt-right' aria-hidden='true'></i></button>",
                });
            });

            // testimonial
            $(document).ready(function () {
                $(".testimonial__container").slick({
                    infinite: false,
                    slidesToShow: 2,
                    slidesToScroll: 1,
                    arrows: false,
                });
            });
        
            // cancel login
            var notiLogin = document.querySelector(".noti-login .modal");
            var alertLogin = document.querySelector(".noti-login");
            var noLogin = document.querySelector(".not-login.active");
            var borrowBtn = document.querySelectorAll(".borrow");
            var titleModal = notiLogin.querySelector("h5");
            var contentModal = notiLogin.querySelector("p");

            if(titleModal.textContent !== ""){
                notiLogin.classList.add("active");
            }
            function onCancel() {
                notiLogin.classList.remove("active");
            }

            if(noLogin){
                for(let e of borrowBtn){
                    e.addEventListener("click", (event) => {
                        titleModal.textContent = "Chưa đăng nhập";
                        contentModal.textContent = "Bạn chưa đăng nhập vào hệ thống!"
                        notiLogin.classList.add("active");
                        event.preventDefault();
                    })
                }
            } else {
                // Không cho mượn sách khi số lượng còn 0 quyển, 0 điểm uy tín, đang mượn rồi
                let score = document.querySelector(".navbar-user #user-login").getAttribute("score");
                let IdBorrows = document.querySelector(".navbar-user #user-login").getAttribute("id-borrow");
                console.log(IdBorrows)

                function onBorrow(e){
                    let number = e.closest(".book-info").querySelector(".book-info-quantity span");
                    
                    if(number.innerText === "0"){
                        titleModal.textContent = "Hết sách";
                        contentModal.textContent = "Tạm thời hết sách trên hệ thống!"
                        notiLogin.classList.add("active");
                    }else if(score === "0"){
                        titleModal.textContent = "Không mượn được sách";
                        contentModal.textContent = "Điểm uy tín của bạn không cho phép mượn sách. Cảnh báo: Tài khoản của bạn có nguy cơ bị khóa với số điểm hiện tại!. Mau chóng liên hệ quản lí thư viện để khôi phục!"
                        notiLogin.classList.add("active");
                    }else if(IdBorrows.includes(e.getAttribute("data-id"))){
                        titleModal.textContent = "Không mượn được sách";
                        contentModal.textContent = "Bạn đang mượn quyển sách này rồi!";
                        notiLogin.classList.add("active");
                    }else {
                        location.assign("http://localhost:3000/books/borrowing/" + e.getAttribute("data-id"));
                    }
                }
                function onBorrow2(e){
                    let number = e.getAttribute("data-num");
                    if(number=== "0"){
                        titleModal.textContent = "Hết sách";
                        contentModal.textContent = "Tạm thời hết sách trên hệ thống!"
                        notiLogin.classList.add("active");
                    }else if(score === "0"){
                        titleModal.textContent = "Không mượn được sách";
                        contentModal.textContent = "Điểm uy tín của bạn không cho phép mượn sách. Cảnh báo: Tài khoản của bạn có nguy cơ bị khóa với số điểm hiện tại!. Mau chóng liên hệ quản lí thư viện để khôi phục!"
                        notiLogin.classList.add("active");
                    } else {
                        location.assign("http://localhost:3000/books/borrowing/" + e.getAttribute("data-id"));
                    }
                }
            }


            // Fretch API
            const searchList = document.querySelector(".navbar .search-wrap .history_list");
            fetch("http://localhost:3000/search")
                .then((res) => {
                    return res.json();
                })
                .then((data) => {                   
                    var htmls = data.map((data) => {
                        return `<li class="history_item" onclick="onSearchItem(this)">
                        <p>${data.Name}</p>
                    </li>`
                    })
                    var html = htmls.join("");
                    searchList.innerHTML = html;
                })
                .catch((err) => {
                    console.log("err: " + err);
                })
            const Search = () =>{
                let SearchBox = document.querySelector(".navbar .search-input").value;
                let searchBox = SearchBox.toUpperCase();
                let searchSubmit = document.querySelector(".navbar .search-input-submit");
                searchSubmit.value = SearchBox;
                let searchItem = searchList.querySelectorAll(".history_item");
                let textSearch = searchList.querySelectorAll("p");


                if(searchBox === null || searchBox ===  ""){
                    for(let i = 0; i < textSearch.length; i++){
                        searchItem[i].style.display = "none";
                    }
                }else {
                    searchList.style.display = "block"
                    for(let i = 0; i < textSearch.length; i++){
                        let text = textSearch[i].textContent || textSearch[i].innerHTML;
                        if(text.toUpperCase().includes(searchBox)){
                            {{!-- text.replace(searchBox.bold(), searchBox);
                            console.log(text);
                            searchItem[i].textContent = text; --}}
                            searchItem[i].style.display = "-webkit-box";
                        }else {
                            searchItem[i].style.display = "none";
                        }
                    }
                }               
            }
            function onSearchItem(e) {
                const dataSearch = e.querySelector("p").textContent;
                let searchBox = document.querySelector(".navbar input");
                let searchSubmit = document.querySelector(".navbar .search-input-submit");
                searchBox.value = dataSearch;
                searchSubmit.value = dataSearch;
                searchList.style.display = "none"
                let form = document.querySelector(".navbar .search-wrap");
                form.submit();
            }
        </script>
    </body>
</html>